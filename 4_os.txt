Новый поток создаётся с помощью функции pthread_create 
Функция получает в качестве аргументов указатель на поток, 
переменную типа pthread_t, в которую, в случае удачного завершения сохраняет 
id потока. pthread_attr_t – атрибуты потока. В случае если используются атрибуты 
по умолчанию, то можно передавать NULL. 

start_routin – это непосредственно та функция, которая будет выполняться 
в новом потоке. arg – это аргументы, которые будут переданы функции.
int pthread_create(pthread_t *thread, const pthread_attr_t *attr,
                   void *(*start)(void *), void *arg);

При удачном завершении pthread_create() возвращает код 0, ненулевое значение сигнализирует об ошибке.


Первый параметр вызова pthread_create() является адресом для хранения идентификатора создаваемого потока типа pthread_t.
Аргумент start является указателем на потоковую void * функцию, принимающей бестиповый указатель в качестве единственной переменной.
Аргумент arg — это бестиповый указатель, содержащий аргументы потока. Чаще всего arg указывает на глобальную или динамическую переменную, 
но если вызываемая функция не требует наличия аргументов, то в качестве arg можно указать NULL.
Аргумент attr также является бестиповым указателем атрибутов потока pthread_attr_t. Если этот аргумент равен NULL, 
то поток создается с атрибутами по умолчанию.



pthread_join – ожидание завершение дочернего потока (присоединенный поток). 
Функция pthread_join() ожидает завершения потока обозначенного THREAD_ID. Если 
этот поток к тому времени был уже завершен, то функция немедленно возвращает значение.
Простой механизм, позволяющий нити ожидать завершения другой нити, предоставляет процедура pthread_join. 
При удачном завершении pthread_join() возвращает код 0, ненулевое значение сигнализирует об ошибке.
Функция pthread_join блокирует вызывающую нить до завершения указанной нити. 
При этом целевая (т.е. вызываемая) нить не должна быть автономной (помеченной на освобождение ресурсов).
 Если целевая нить уже завершилась, но не является автономной, то возврат из процедуры pthread_join происходит немедленно. 
После стыковки с целевой нитью она автоматически становится автономной, и отведенную ей память можно восстановить.
Если указатель DATA отличается от NULL, то туда помещаются данные, 
возвращаемые потоком через функцию pthread_exit() или 
через инструкцию return потоковой функции.

Функция pthread_exit() завершает вызывающий поток